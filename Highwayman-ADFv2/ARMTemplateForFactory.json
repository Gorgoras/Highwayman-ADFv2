{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Highwayman-ADFv2"
		},
		"ADW_SETTLEMENT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADW_SETTLEMENT'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStore1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataLakeStore1'"
		},
		"Blob_brahminstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blob_brahminstorage'"
		},
		"Databricks_Meli_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Databricks_Meli'"
		},
		"FS_Notebook_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FS_Notebook'"
		},
		"Houses_Nacho_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Houses_Nacho'"
		},
		"LakeGen2_cluster_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LakeGen2_cluster'"
		},
		"Lake_Nacho_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Lake_Nacho'"
		},
		"Lake_Pami_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Lake_Pami'"
		},
		"Mi_Databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Mi_Databricks'"
		},
		"S3_Pi_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'S3_Pi'"
		},
		"SQL_SERVERLESS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_SERVERLESS'"
		},
		"SQL_SOURCEDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_SOURCEDB'"
		},
		"SQL_WASTELAND_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_WASTELAND'"
		},
		"TunnelSnakeLinkedServ_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'TunnelSnakeLinkedServ'"
		},
		"AzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"AzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "caravan3-python"
		},
		"BlobCsv_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "blobcsvfromhttp.csv"
		},
		"BlobCsv_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "caravan2/VCF"
		},
		"Caravan2_brahmin_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "TSVC_variants_IonCode_0106.vcf"
		},
		"Caravan2_brahmin_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "caravan2/VCF"
		},
		"LakeSales_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"LakeSales_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Sales"
		},
		"Lakegen2clusterAvro_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"Lakegen2clusterAvro_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "clusterhdinsight/DataFactoryAvro"
		},
		"Lakegen2clusterORC_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"Lakegen2clusterORC_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "clusterhdinsight/DataFactoryORC"
		},
		"AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://lakemead1.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "92edc83e-82bc-46a3-ab79-2fc09b752cd0"
		},
		"AzureDataLakeStore1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "ca1d08b0-9543-4bd9-8718-42becddc7786"
		},
		"AzureDataLakeStore1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "fc2b6f69-07e8-4361-a14c-926b7e50d69e"
		},
		"AzureDataLakeStore1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "Wasteland"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://chargecard764Id.vault.azure.net/"
		},
		"FS_Notebook_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Laburo\\Tests"
		},
		"FS_Notebook_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "DESKTOP-DIIS9C2\\marti"
		},
		"HttpServer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.worldtradingdata.com/api/v1/history?symbol=SNAP&output=csv&sort=newest&api_token=demo"
		},
		"LakeGen2_cluster_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2cluster.dfs.core.windows.net"
		},
		"Lake_Nacho_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dataflowlake.dfs.core.windows.net/"
		},
		"Lake_Pami_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pamilakegen2.dfs.core.windows.net"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.xml"
		},
		"S3_Pi_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAQT5ATOS5WHFFSN6L"
		},
		"triggerwin_properties_pipeline_parameters_FileName": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AddPipeId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AddPipeIdActivity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select *, pipeId=', pipeline().RunId,' from SalesLT.Address')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CustomerSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SourceDboSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerSource')]",
				"[concat(variables('factoryId'), '/datasets/SourceDboSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunctionCall')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PythonFunc",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "HttpTrigger",
							"method": "POST",
							"headers": {},
							"body": {
								"name": "martin"
							}
						},
						"linkedServiceName": {
							"referenceName": "TunnelSnakeLinkedServ",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TunnelSnakeLinkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericSourceDB-Wasteland')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceTable')]",
				"[concat(variables('factoryId'), '/datasets/SinkTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericWatermark')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OldWatermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(@{pipeline().parameters.WatermarkField}) as old from @{pipeline().parameters.TableName}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CustomerSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "NewWatermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(@{pipeline().parameters.WatermarkField}) as new from @{pipeline().parameters.TableName}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CustomerSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DeltaCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OldWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NewWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM @{pipeline().parameters.TableName} where @{pipeline().parameters.WatermarkField} > @{activity('OldWatermark').output.firstRow.old} AND @{pipeline().parameters.WatermarkField} <= @{activity('NewWatermark').output.firstRow.new}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CustomerSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"WatermarkField": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerSink')]",
				"[concat(variables('factoryId'), '/datasets/CustomerSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetCsv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CsvHttp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CsvHttp')]",
				"[concat(variables('factoryId'), '/datasets/BlobCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetPipelineID')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipeId",
							"value": {
								"value": "@uriComponentToString(concat('select \"', pipeline().RunId,'\" as RunID'))",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"PipeId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipeConDatabricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DatabricksJob1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/ADFScripts/ScriptJob1",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.name",
									"type": "Expression"
								}
							},
							"libraries": [
								{
									"jar": ""
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "Mi_Databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Mi_Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReadingParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copiar de lake a db",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Unificado_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sql_unificado_wasteland",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Unificado_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/Sql_unificado_wasteland')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestApi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WaitForASecond",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Copy Data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestDataset')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StealingNachoData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT table_name FROM information_schema.tables"
							},
							"dataset": {
								"referenceName": "QueryNacho",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDWTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "lake_nacho_dataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/QueryNacho')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWTable1')]",
				"[concat(variables('factoryId'), '/datasets/lake_nacho_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestSqlServerless')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CustomerSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Serverless_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerSource')]",
				"[concat(variables('factoryId'), '/datasets/Serverless_Customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestingWebhook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call_Webhook",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://s2events.azure-automation.net/webhooks?token=m%2buQ7K9SLpDK2%2brqv5OVjmPTYk0JxcJa2Tl5FLBmXBk%3d",
							"method": "POST",
							"headers": {},
							"body": "{p}"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobToblob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*.*"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "textpy",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "sinktextpy",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]",
				"[concat(variables('factoryId'), '/datasets/textpy')]",
				"[concat(variables('factoryId'), '/datasets/sinktextpy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/forEachPipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.asd",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "setVar",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@pipeline().parameters.asd",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"asd": {
						"type": "array",
						"defaultValue": [
							"a",
							"b",
							"c"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/setVar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getTriggerFileName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileNameTrigger",
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"FileNameTrigger": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_unificado')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Unificado",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Customer')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Unificado')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/readCsvMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CsvBrahmin",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CsvBrahmin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/readLakeMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CsvBrahmin",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CsvBrahmin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/readVCFFromLake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ReadFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Caravan2_brahmin",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"structure",
								"itemName"
							]
						}
					},
					{
						"name": "SetearParamDinamico",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReadFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CamposVCF",
							"value": {
								"value": "@{replace(JSON(STRING(activity('ReadFile').output.structure[9]))['name'], '#', '')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CrearTablaDinamica",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SetearParamDinamico",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CrearTablaDinamica]",
							"storedProcedureParameters": {
								"NombreTabla": {
									"value": {
										"value": "@replace(replace(activity('ReadFile').output.itemName,'.vcf',''),'-','_')",
										"type": "Expression"
									},
									"type": "String"
								},
								"Numero": {
									"value": {
										"value": "@variables('CamposVCF')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADW_SETTLEMENT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy VCF to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CrearTablaDinamica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Caravan2_brahmin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "unpivotTablePASS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy VCF to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlDWSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Unificado_Warehouse",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "agregar resultado",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "drop table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AgregarResultado]"
						},
						"linkedServiceName": {
							"referenceName": "ADW_SETTLEMENT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "drop table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "unpivotTablePASS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Drop_Table]",
							"storedProcedureParameters": {
								"NombreTabla": {
									"value": {
										"value": "@replace(replace(activity('ReadFile').output.itemName,'.vcf',''),'-','_')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADW_SETTLEMENT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "eliminar duplicados",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "agregar resultado",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LimpiarDuplicados]"
						},
						"linkedServiceName": {
							"referenceName": "ADW_SETTLEMENT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"CamposVCF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Caravan2_brahmin')]",
				"[concat(variables('factoryId'), '/linkedServices/ADW_SETTLEMENT')]",
				"[concat(variables('factoryId'), '/datasets/SinkTable1')]",
				"[concat(variables('factoryId'), '/datasets/SourceTable1')]",
				"[concat(variables('factoryId'), '/datasets/Unificado_Warehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/setVar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Var1",
							"value": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"variables": {
					"Var1": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testingPipeRun')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					}
				],
				"parameters": {
					"Param1": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/writeAsAvroDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Leer DB y copiar",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "AzureBlobFSSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Lakegen2clusterAvro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Customer')]",
				"[concat(variables('factoryId'), '/datasets/Lakegen2clusterAvro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/writeAsORCDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Leer DB y copiar",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "AzureBlobFSSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Lakegen2clusterORC",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Customer')]",
				"[concat(variables('factoryId'), '/datasets/Lakegen2clusterORC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/writeAsParquetDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lee Escribe",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/ADFScripts/ScriptJob1",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.input",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Mi_Databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"input": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Mi_Databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/writeAsParquetDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Read DB Save",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Lakegen2ClusterParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Customer')]",
				"[concat(variables('factoryId'), '/datasets/Lakegen2ClusterParquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Houses_Nacho",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "@item().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Houses_Nacho')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 1266,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('BlobCsv_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('BlobCsv_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Caravan2_brahmin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 1266,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('Caravan2_brahmin_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('Caravan2_brahmin_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsvBrahmin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AuditLog.csv",
						"container": "caravan2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CreationDate",
						"type": "String"
					},
					{
						"name": "UserIds",
						"type": "String"
					},
					{
						"name": "Operations",
						"type": "String"
					},
					{
						"name": "AuditData",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsvHttp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsvSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Csv_S3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S3_Pi",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "pisas-s3-bucket",
						"folderPath": "MartinFolder",
						"fileName": "smartsheetPOC.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "This POC is up to date",
						"type": "String"
					},
					{
						"name": "Zone POC ID Mapping",
						"type": "String"
					},
					{
						"name": "POC ID",
						"type": "String"
					},
					{
						"name": "Poc Name",
						"type": "String"
					},
					{
						"name": "Zone",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Kitchen",
						"type": "String"
					},
					{
						"name": "Subtype (optional)",
						"type": "String"
					},
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Owned or Franchised",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Opening Date",
						"type": "String"
					},
					{
						"name": "Date Closed",
						"type": "String"
					},
					{
						"name": "Reputology Expected Listings",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "Google Maps Address",
						"type": "String"
					},
					{
						"name": "Date of conversion: Owned POC to Franchise POC",
						"type": "String"
					},
					{
						"name": "Number of Seats",
						"type": "String"
					},
					{
						"name": "Area (square meters)",
						"type": "String"
					},
					{
						"name": "Number of FTEs",
						"type": "String"
					},
					{
						"name": "Total opening CAPEX (in Local Currency)",
						"type": "String"
					},
					{
						"name": "Seed/Launch/Grow Classification",
						"type": "String"
					},
					{
						"name": "Comments",
						"type": "String"
					},
					{
						"name": "In Scope For EBITDA Challenge",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "Supervisor",
						"type": "String"
					},
					{
						"name": "Owner",
						"type": "String"
					},
					{
						"name": "Reputology Name",
						"type": "String"
					},
					{
						"name": "ICG POS Dataname",
						"type": "String"
					},
					{
						"name": "Zone Division",
						"type": "String"
					},
					{
						"name": "Audit Frequency",
						"type": "String"
					},
					{
						"name": "Trading Hours",
						"type": "String"
					},
					{
						"name": "Old POC ID",
						"type": "String"
					},
					{
						"name": "NR Source",
						"type": "String"
					},
					{
						"name": "POS ID Number",
						"type": "String"
					},
					{
						"name": "Lavu Dataname",
						"type": "String"
					},
					{
						"name": "Lavu Token",
						"type": "String"
					},
					{
						"name": "Lavu Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S3_Pi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_WASTELAND",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[SalesLT].[Customer]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_WASTELAND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SOURCEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[SalesLT].[Customer]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SOURCEDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "trip",
						"container": "hivecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LakeSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('LakeSales_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('LakeSales_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lake_Pami_Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Lake_Pami",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Lu_Beneficio.rar",
						"folderPath": "BENEFICIO",
						"fileSystem": "pruebas"
					},
					"columnDelimiter": ",",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Lake_Pami')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lakegen2ClusterParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LakeGen2_cluster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "DataFactory",
						"fileSystem": "clusterhdinsight"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "Indice",
						"type": "INT32"
					},
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "NameStyle",
						"type": "BOOLEAN"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "FirstName",
						"type": "UTF8"
					},
					{
						"name": "MiddleName",
						"type": "UTF8"
					},
					{
						"name": "LastName",
						"type": "UTF8"
					},
					{
						"name": "Suffix",
						"type": "UTF8"
					},
					{
						"name": "SalesPerson",
						"type": "UTF8"
					},
					{
						"name": "EmailAddress",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "PasswordHash",
						"type": "UTF8"
					},
					{
						"name": "PasswordSalt",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					},
					{
						"name": "CompanyName",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LakeGen2_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lakegen2clusterAvro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LakeGen2_cluster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"format": {
						"type": "AvroFormat"
					},
					"fileName": "[parameters('Lakegen2clusterAvro_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('Lakegen2clusterAvro_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LakeGen2_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lakegen2clusterORC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LakeGen2_cluster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"format": {
						"type": "OrcFormat"
					},
					"fileName": "[parameters('Lakegen2clusterORC_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('Lakegen2clusterORC_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LakeGen2_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LakeGen2_cluster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "DataFactory",
						"fileSystem": "clusterhdinsight"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "NameStyle",
						"type": "BOOLEAN"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "FirstName",
						"type": "UTF8"
					},
					{
						"name": "MiddleName",
						"type": "UTF8"
					},
					{
						"name": "LastName",
						"type": "UTF8"
					},
					{
						"name": "Suffix",
						"type": "UTF8"
					},
					{
						"name": "CompanyName",
						"type": "UTF8"
					},
					{
						"name": "SalesPerson",
						"type": "UTF8"
					},
					{
						"name": "EmailAddress",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "PasswordHash",
						"type": "UTF8"
					},
					{
						"name": "PasswordSalt",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LakeGen2_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QueryNacho')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Houses_Nacho",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Houses_Nacho')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "RelatUrl"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Unificado')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SOURCEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CHROM",
						"type": "varchar"
					},
					{
						"name": "POS",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "REF",
						"type": "varchar"
					},
					{
						"name": "ALT",
						"type": "varchar"
					},
					{
						"name": "QUAL",
						"type": "varchar"
					},
					{
						"name": "FILTER",
						"type": "varchar"
					},
					{
						"name": "INFO",
						"type": "varchar"
					},
					{
						"name": "FORMAT",
						"type": "varchar"
					},
					{
						"name": "MUESTRA",
						"type": "varchar"
					},
					{
						"name": "VALOR",
						"type": "varchar"
					},
					{
						"name": "ORIGEN",
						"type": "varchar"
					},
					{
						"name": "FECHA_COPIA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RESULTADO",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Unificado]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SOURCEDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serverless_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SERVERLESS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "MiddleName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SERVERLESS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "hivecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_WASTELAND",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@pipeline().parameters.TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_WASTELAND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_WASTELAND",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@pipeline().parameters.TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_WASTELAND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDboSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SOURCEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pipeId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Sales]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SOURCEDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SOURCEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@pipeline().parameters.TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SOURCEDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SOURCEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@pipeline().parameters.TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SOURCEDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_SOURCEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[SalesLT].[Customer]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_SOURCEDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sql_unificado_wasteland')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_WASTELAND",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Indice",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "nvarchar"
					},
					{
						"name": "PasswordSalt",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Unificado]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_WASTELAND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestingWranglingDataflows')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "testtrigger"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unificado_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LakeGen2_cluster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ADFRun1",
						"fileSystem": "clusterhdinsight"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Indice",
						"type": "INT32"
					},
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "NameStyle",
						"type": "BOOLEAN"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "FirstName",
						"type": "UTF8"
					},
					{
						"name": "MiddleName",
						"type": "UTF8"
					},
					{
						"name": "LastName",
						"type": "UTF8"
					},
					{
						"name": "Suffix",
						"type": "UTF8"
					},
					{
						"name": "SalesPerson",
						"type": "UTF8"
					},
					{
						"name": "EmailAddress",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "PasswordHash",
						"type": "UTF8"
					},
					{
						"name": "PasswordSalt",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					},
					{
						"name": "CompanyName",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LakeGen2_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unificado_Warehouse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADW_SETTLEMENT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CHROM",
						"type": "varchar"
					},
					{
						"name": "POS",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "REF",
						"type": "varchar"
					},
					{
						"name": "ALT",
						"type": "varchar"
					},
					{
						"name": "QUAL",
						"type": "varchar"
					},
					{
						"name": "FILTER",
						"type": "varchar"
					},
					{
						"name": "INFO",
						"type": "varchar"
					},
					{
						"name": "FORMAT",
						"type": "varchar"
					},
					{
						"name": "MUESTRA",
						"type": "varchar"
					},
					{
						"name": "VALOR",
						"type": "varchar"
					},
					{
						"name": "ORIGEN",
						"type": "varchar"
					},
					{
						"name": "FECHA_COPIA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RESULTADO",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Unificado]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADW_SETTLEMENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lake_nacho_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Lake_Nacho",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@item().table_name",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "adventure-works"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Lake_Nacho')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinktextpy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(activity('Get Metadata1').output.childItems, '.csv')",
							"type": "Expression"
						},
						"container": "caravan3-python"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/textpy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_brahminstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@item().name",
							"type": "Expression"
						},
						"container": "caravan3-python"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_brahminstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADW_SETTLEMENT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ADW_SETTLEMENT_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('AzureDataLakeStore1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStore1_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureDataLakeStore1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_brahminstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blob_brahminstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks_Meli')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Databricks_Meli_accessToken')]"
					},
					"existingClusterId": "0610-153831-abode187"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FS_Notebook')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FS_Notebook_properties_typeProperties_host')]",
					"userId": "[parameters('FS_Notebook_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FS_Notebook_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-Notebook",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-Notebook')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Houses_Nacho')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('Houses_Nacho_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-RobaNacho",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-RobaNacho')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LakeGen2_cluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LakeGen2_cluster_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LakeGen2_cluster_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lake_Nacho')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Lake_Nacho_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Lake_Nacho_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-RobaNacho",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-RobaNacho')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lake_Pami')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Lake_Pami_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Lake_Pami_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mi_Databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Mi_Databricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "5.4.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S3_Pi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('S3_Pi_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('S3_Pi_secretAccessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SERVERLESS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_SERVERLESS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-DBs",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-DBs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SOURCEDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_SOURCEDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-DBs",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-DBs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_WASTELAND')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_WASTELAND_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-DBs",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-DBs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TunnelSnakeLinkedServ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://tunnelsnake.azurewebsites.net",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('TunnelSnakeLinkedServ_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerwin')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "setVar",
						"type": "PipelineReference"
					},
					"parameters": {
						"FileName": "[parameters('triggerwin_properties_pipeline_parameters_FileName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-09-02T00:00:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/setVar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-DBs')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West US 2",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLiveInMinutes": 60
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-Notebook')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-RobaNacho')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "South Central US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WranglingDataFlow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CsvBrahmin",
							"script": "",
							"dataset": {
								"referenceName": "CsvBrahmin",
								"type": "DatasetReference"
							},
							"typeProperties": {
								"readMode": null
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "TestingWranglingDataflows",
								"type": "DatasetReference"
							},
							"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared CsvBrahmin = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://brahminstorage.blob.core.windows.net/caravan2/AuditLog.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = CsvBrahmin,\r\n  #\"Filtered rows\" = Table.SelectRows(Source, each ([UserIds] = \"mzurita@piconsulting.com.ar\")),\r\n  #\"Filtered rows 1\" = Table.SelectRows(#\"Filtered rows\", each ([Operations] <> \"CreateDataset\" and [Operations] <> \"Import\" and [Operations] <> \"ViewDashboard\"))\r\nin\r\n  #\"Filtered rows 1\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CsvBrahmin')]",
				"[concat(variables('factoryId'), '/datasets/TestingWranglingDataflows')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CsvBrahmin",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tCreationDate as string,\n\t\tUserIds as string,\n\t\tOperations as string,\n\t\tAuditData as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 derive(UserIds = UserIds,\n\t\tCreationDate = CreationDate,\n\t\tOperations = Operations,\n\t\tAuditData = AuditData,\n\t\tOperationsNew = concat(Operations, AuditData)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CsvBrahmin')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		}
	]
}